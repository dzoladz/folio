{
    "openapi": "3.0.0",
    "info": {
      "title": "Note Links",
      "version": "v1.0.0"
    },
    "servers": [
      {
        "url": "http://github.com/org/folio/mod-notes"
      }
    ],
    "paths": {
      "/note-links/type/{type}/id/{id}/": {
        "put": {
          "responses": {
            "204": {
              "description": "Links successfully added"
            },
            "400": {
              "description": "Bad request, e.g. malformed request body. Details of the error (e.g. name of the parameter or line/character number with malformed data) provided in the response.",
              "content": {
                "text/plain": {
                  "schema": {
                    "example": "unable to update note links -- malformed JSON at 13:4"
                  }
                }
              }
            },
            "404": {
              "description": "One of the notes from request is not found",
              "content": {
                "text/plain": {
                  "schema": {
                    "example": "Note with id '62d00c36-a94f-434d-9cd2-c7ea159303da' not found"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "text/plain": {
                  "schema": {
                    "example": "internal server error, contact administrator"
                  }
                }
              }
            }
          },
          "description": "Add links to specified list of notes",
          "operationId": "PUT_note-links-type-type-id-id",
          "requestBody": {
            "content": {
              "application/json": {
                "example": "Can not resolve examples/link/noteLinksPut.json",
                "schema": {
                  "$ref": "#/components/schemas/noteLinksPut"
                }
              }
            },
            "required": true
          }
        },
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "/note-links/domain/{domain}/type/{type}/id/{id}/": {
        "get": {
          "responses": {
            "200": {
              "description": "Return a list of notes",
              "content": {
                "application/json": {
                  "example": "Can not resolve examples/noteCollection.sample",
                  "schema": {
                    "$ref": "#/components/schemas/noteCollection"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request, e.g. malformed request body. Details of the error (e.g. name of the parameter or line/character number with malformed data) provided in the response.",
              "content": {
                "text/plain": {
                  "schema": {
                    "example": "unable to get list -- malformed JSON at 13:4"
                  }
                }
              }
            },
            "401": {
              "description": "Not authorized to perform requested action",
              "content": {
                "text/plain": {
                  "schema": {
                    "example": "unable to list -- unauthorized"
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error",
              "content": {
                "text/plain": {
                  "schema": {
                    "example": "internal server error, contact administrator"
                  }
                }
              }
            }
          },
          "description": "Return a list of notes by status",
          "operationId": "GET_note-links-domain-domain-type-type-id-id",
          "parameters": [
            {
              "name": "title",
              "in": "query",
              "description": "Search string for note title. Note is returned only if it contains specified word or sequence of words anywhere in the title. Search is case-insensitive.",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "noteType",
              "in": "query",
              "description": "Search string for note type. Note(s) is returned only if it equals to specified word or sequence of words in the titleseparated by com type name. Multiple types should be declared with query parameter sequentially as follows \"noteType=a&noteType=b\". Search is case sensitive.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Filtering records by status. Possible values are ASSIGNED, UNASSIGNED, ALL.",
              "schema": {
                "default": "ALL",
                "type": "string"
              }
            },
            {
              "name": "orderBy",
              "in": "query",
              "description": "Field by which notes are ordered. Possible values are status, title, content, linksNumber, noteType, updatedDate. The default ascending sorting is applied for status, title, content, linksNumber, noteType parameters. For updatedDate is descending. Explicit selection of sorting can be set by using order query parameter.",
              "schema": {
                "default": "status",
                "type": "string"
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "indicates order of notes. Possible values asc, desc.",
              "schema": {
                "default": "default",
                "type": "string"
              }
            }
          ]
        },
        "parameters": [
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "components": {
      "schemas": {
        "noteLinksPut": {
          "includePath": "types/link/noteLinksPut.json",
          "$ref": "#/components/schemas/Can not resolve types/link/noteLinksPut.json"
        },
        "errors": {
          "includePath": "raml-util/schemas/errors.schema",
          "$ref": "#/components/schemas/Can not resolve raml-util/schemas/errors.schema"
        },
        "noteCollection": {
          "includePath": "types/notes/noteCollection.json",
          "$ref": "#/components/schemas/Can not resolve types/notes/noteCollection.json"
        },
        "note": {
          "includePath": "types/notes/note.json",
          "$ref": "#/components/schemas/Can not resolve types/notes/note.json"
        }
      },
      "responses": {},
      "parameters": {},
      "examples": {},
      "requestBodies": {},
      "headers": {},
      "securitySchemes": {},
      "links": {},
      "callbacks": {}
    }
  }